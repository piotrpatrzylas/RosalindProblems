# 001 Counting DNA Nucleotides
s = "AGTTGACCGTCGAAGTACTCAGTGTGTAACGGTCGGTCTTGTTGGGGATTAGATAATTTGCAAAAAGCTGCGCCATAC" \
    "GCTGATTATTGACCTAACGTTAGGTGGCAATTGGCGACAATCAGTTGTATACACCTTCTTTCCTCACATTACACTACC" \
    "GATAGGCAGCCCAACGTCGGTCGTTGTTATTCATCGTTTCATCAAAAAAAGCGCTACAAATCCTCACTTTAATGGGAT" \
    "ACATAGATTAGTTGGGAGTCAGGAGGGGCGTCTAATGTTGCGGGGGTGGGGGTGTAAAAAGCATTCTTATCTTGCGGA" \
    "CAACTCCCAATCTCAAAGGTTCACGTAACTTCAGACCCGGCGATATAGATGTAAGTCTAACAGACGGTAAAGGATCAT" \
    "CTGCCATGCGAAGATATATTAGGTCGTACGAGACGGGCATTTACATGGTCCTGGCTCCACGTACCGTCCAGAGGAATC" \
    "ATGAGGCGTCTAACCTACGGAAAACCAGACTTCAAAGCTCCATTGGAGGCATACGGGGGTGACGGTTGGAATGACGCC" \
    "CCAGCAAGCGTCCACCGTAGACTGAGCTGTCTGGAACCCTCCTAACTTATGAGTGATCCATCGGCAGTCGCCGCGCCC" \
    "AGCCTAAAGTAGAGAGGGATCATACATGGAATATGTGAGTTATTATGACACGGCCCCCTAAGTAAGCAGATTTCCCAC" \
    "CTCTTCTGCTTACGGCCTTAATTGTAAAGCGCAGCCGGATCAACTATGTAATTGCCAGGAGTCACACAAGTGCTCTAC" \
    "CTTTTAGTTATTAAGTAGCTCCGACCG"
print (s.count("A"), s.count("C"), s.count("G"), s.count("T"))

# 002 Transcribing DNA into RNA
s = "CTAGCCCTTGCGAGTTTCCGCTTCTCATTACCGCGAATCAGCGGTACGGGGGCGGAGCAGTTTTAACCCGTCCTGCACCTGAACAGAGGGATCCGTCTGGCTAATACTGTT" \
    "AATGCGGGGGTTTGTCTCTGTCGGTCTACTAGTTCGTGGCAGCTATCACCCAATTATAGAACTTCTGATGCTATCGGGCGCGGAAGAGCACTTCACAGTCCAACTGAGTAT" \
    "CCGAAACACTTCCGCGCAGCCTCAGATTCCTCGTTAACCTCGGCAAAAAACGACAGCCCAACGTTCCAAACATAGCTATCGACCAACACGGTAAACCACGCCTGGTGTCGG" \
    "ACAGTGGCCCATTACCCGGAGGCATCAAGGAATGATTTCTGTGCACTGGAACTATCTATTTCCTGGGGCACCGGAGGTCCTCTCAGTGCTGAGTGGGGCATTCGGATAACG" \
    "GACACATCGGCGAATGTGTCGACGTGGATCAAGTGGCGGGATAGGACCGGAGGGACGGGCCTTATGATGCTAGGGAGATCCATTTGGACTGGTAGTCCCTCGCCTTAGTGA" \
    "TATAGACAAAGCGTAGAGAGGCATATTATGAGTATCGAGTGCACCGAAAAAAAACGCCGATGGTAGTGTGTTAAATGAGCCCCTTTCATGGGAAAATTCTTTGAGACTTTA" \
    "GAGAAGATAGGTGGTGAACTGACAACCAGCTACTGAGAAGTTCGATTCAAGACCGGAACCCCAGTCACCAAACTGTCTGAGGGTCTGCAGTAGAGCCCGGAACCTTCATCT" \
    "GCCCTATCCAGTCTAAGGGGGTTATGGGCGTACCTGACGGAGAACGGGTTGCTACATTGTTCGTCTCGATAGTAATTAGCCGAACAGATGCGTAAGTTTAATGCAATGATA" \
    "AGAACTTCATCGTCATGCCGCCCACTTAGATGTCCTATCTCGCCCTAA"
print(s.replace("T", "U"))

# 003 Complementing a Strand of DNA
s = "CGTTTGAGCCGATCTAATACCTGGACACTGGGTCTGAAGTTCCCTTGTGGTTCGAGCCTAGCGTTGCCGACTCAAACTTTAGTACGACGTTGCACCCGCAGGGTTCCGGAA" \
    "TGAGATCAGTGGAATATCTTGGGAGCCCAGTAAGCACACCTTTGACAATACTTACGTTCATGGGTATCGGTTTGTGAGACCGTGGCGATACCAATCGCCAGTTGAGACTCC" \
    "ACGTATGAAGGAGTAGTCAGCAAAGTCCGTCTGTACCTATAATGCCGGAACTGAATAACCGGCACAGCGTGGCTGGGCCGTCATGCTTAAGATCCAATGCAAAAGTATCAA" \
    "GACAAACGAATTAAGGATGACAAGCCTGGCCCAGCACCACTTCACGCAGATCTTTTCACGGAGACATGAACCGTTTCAAATGCGTAGTGCTATACTAATACTCCCGGCCCC" \
    "ATCTAGTATATGAGCAAGCAGTTCGCTACCTCATTTTTCCGCTCGCCAGTCTCGTAACGCACGCTCCTCCCCGGGCGCGGGACACCTAACCGATTCTCGACATAAACGTTC" \
    "GGCTTCTCGATGTCACAACCACAGAGTTGTGCCCCCACCGAAGCTCAAGAATTGCTCCATTCGTATAAGGTAGGGGGGGCTTGCGGAATGTAATCGAAGGTCTCTCGAATA" \
    "TCAGGACCAAAAGCGATTATTAGCCAGGTTAGTCGTTCGGAGTTCAGCGCCAGCTGCTGCCGGAGGTGTTTATAGTTCTAGAGAACCTAGCTAAGTATTCAGACATCCCGT" \
    "TCTAGGAGCGCAAGTTAGCGCATCTTCCTTATCAGTTAGGTCGAGCCGCACACGCCCAAGACGAGATGTTTTATCTAGATTCGCCGGAAGCACCCCCTGGTACTCGAGGTG" \
    "CGGGCTGAAGGA"
s = s.replace('A', 't').replace('T', 'a').replace('C', 'g').replace('G', 'c').upper()[::-1]
print(s)
